@startuml

interface BitmapCache
class DiskCache
class DiskLruCache
class DoubleCache
class MemoryCache

class ImageLoaderConfig
class DisplayConfig

interface ImageLoadListener

interface ILoadStrategy
abstract BaseLoadStrategy
class NetworkLoadStrategy
class DrawableLoadStrategy
class LocalLoadStrategy
class LoadManager

class Request
class ImageLoadTask

class ImageLoader

BitmapCache <|.. DiskCache
BitmapCache <|.. DoubleCache
BitmapCache <|.. MemoryCache

ILoadStrategy <|.. BaseLoadStrategy
BaseLoadStrategy <|-- NetworkLoadStrategy
BaseLoadStrategy <|-- DrawableLoadStrategy
BaseLoadStrategy <|-- LocalLoadStrategy

interface BitmapCache {
Bitmap get(String key)
put(String key, Bitmap value)
remove(String key)
clearCache()
}

interface ILoadStrategy {
loadImage(Request request)
}

abstract class BaseLoadStrategy {
{abstract} Bitmap onLoadImage(Request request)
updateImageView(Request request, Bitmap bitmap)
}

class DiskCache {
DiskLruCache mDiskLruCache
}

class MemoryCache {
LruCache<String, Bitmap> mMemoryCache
}

DiskCache <.. DiskLruCache
DoubleCache <.. MemoryCache
DoubleCache <.. DiskCache


class ImageLoader {
static ImageLoader sInstance
ImageLoaderConfig mConfig
BitmapCache mCache
ImageLoadTask mImageLoadTask
Request mRequest

void get()
void init(ImageLoaderConfig config)
ImageLoader load(int resID)
ImageLoader load(String uri)
ImageLoader error(int errorResID)
ImageLoader(int placeHoldResID)
ImageLoader displayRaw(boolean  displayRaw)
ImageLoader listener(ImageLoadListener listener)
ImageLoader into(ImageView imageView)
}

class ImageLoadTask {
void start()
}

class DoubleCache {
DiskCache mDiskCache;
MemoryCache mMemoryCache
}

ImageLoader <.. ImageLoadTask
ImageLoader <.. Request
ImageLoader <.. ImageLoaderConfig
ImageLoader <.. BitmapCache

Request <.. DisplayConfig
Request <.. ImageLoadListener

class LoadManager {
ILoadStrategy getLoader(String uri)
}

LoadManager <.. ILoadStrategy
ImageLoadTask <.. LoadManager

class ImageLoaderConfig {
DisplayConfig mDisplayConfig
BitmapCache bitmapCache;
int threadCount
ImageLoaderConfig displayConfig(DisplayConfig displayConfig)
public ImageLoaderConfig cache(BitmapCache cache)
ImageLoaderConfig threadCount(int count)
}

interface ImageLoadListener {
void onResourceReady(Bitmap bitmap, String uri);
void onFailure();
}

class DisplayConfig{
public int defaultWidth
public int defaultHeight
public int placeHolderResId
public int errorResId
public boolean displayRaw
}
@enduml